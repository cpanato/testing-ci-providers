# Copyright 2025 Chainguard, Inc.
# SPDX-License-Identifier: Apache-2.0

# This job will collect the cloud run services/jobs from Staging and update the wiki
# you can check the page at https://chainguard.engineering/docs/oncall/services/staging/services/

name: Update Service Catalog

on:
  push:
    branches:
      - 'main'
  workflow_dispatch:
    inputs:
      gh_org:
        type: choice
        description: Which Environment to update the service catalog
        options:
        - test-1
        - test-2


permissions: {}

jobs:
  detect-changes:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Detect changed paths and set matrix
        id: set-matrix
        shell: bash
        run: |
          declare -A org_paths=(
            ["test1"]="test-folder/"
            ["test2"]="testing/"
            ["test3"]="workflows/"
          )

          changed_files=$(git diff --name-only ${{ github.event.before }}..${{ github.event.after }})
          orgs=()

          for org in "${!org_paths[@]}"; do
            if echo "${changed_files}" | grep -q "${org_paths[${org}]}"; then
              orgs+=("${org}")
            fi
          done

          if [[ ${#orgs[@]} -eq 0 ]]; then
            echo "matrix={\"include\":[]}" >> "${GITHUB_OUTPUT}"
            echo "has_changes=false" >> "${GITHUB_OUTPUT}"
          else
            org_list=$(printf '{"gh_org":"%s"},' "${orgs[@]}")
            org_list=${org_list%,}
            matrix_json=$(printf '{"include":[%s]}' "${org_list}")
            echo "matrix=${matrix_json}" >> "${GITHUB_OUTPUT}"
            echo "has_changes=true" >> "${GITHUB_OUTPUT}"
          fi
          echo "------"
          echo "Changed files: ${changed_files}"

  update-gh-repo-wiki:
    if: always() && (github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && needs.detect-changes.outputs.matrix != '{"include":[]}'))
    needs: [detect-changes]

    permissions:
      contents: read # checkout PR
      id-token: write # federate

    strategy:
      matrix: ${{ github.event_name == 'push' && fromJSON(needs.detect-changes.outputs.matrix) || fromJSON('{"include":[{"gh_org":""}]}') }}
    uses: ./.github/workflows/.presubmit.yaml
    with:
      cg_identity: ${{ github.event.inputs.gh_org || matrix.gh_org }}
