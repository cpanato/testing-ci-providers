name: Check Release Status

on:
  workflow_dispatch:

env:
  REPO_OWNER: 'cpanato'
  REPO_NAME: 'testing-ci-providers'
  DAYS_THRESHOLD: '7'

permissions: {}

jobs:
  check-release:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
    - name: Checkout repository
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - name: Check latest release
      id: check-release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Run the release check script and capture output
        output=$(./scripts/check-release.sh -o "$REPO_OWNER" -r "$REPO_NAME" -d "$DAYS_THRESHOLD" 2>&1)
        exit_code=$?

        echo "Script output:"
        echo "$output"

        # Set status and alert based on exit code
        case $exit_code in
          0) status="ok"; alert="false" ;;
          1) status="error"; alert="true" ;;
          2) status="alert"; alert="true" ;;
          *) status="unknown"; alert="true"; output="WARN: Unknown error occurred: $output" ;;
        esac

        # Set GitHub outputs
        echo "status=$status" >> "$GITHUB_OUTPUT"
        echo "alert=$alert" >> "$GITHUB_OUTPUT"
        echo "slack_message=$(echo "$output" | grep -E "^(ALERT|ERROR|WARN):" | head -1 || echo "$output")" >> "$GITHUB_OUTPUT"

    - name: Send Slack notification
      if: steps.check-release.outputs.status != 'ok'
      uses: rtCamp/action-slack-notify@e31e87e03dd19038e411e38ae27cbad084a90661 # v2.3.3
      env:
        # The secret used points to #eng-oncall
        SLACK_WEBHOOK: ${{ secrets.SLACK_INCOMING_WEBHOOK }}
        SLACK_CHANNEL: "C071G13U81J"
        SLACK_COLOR: ${{ steps.check-release.outputs.status == 'alert' && 'danger' || 'warning' }}
        SLACK_MESSAGE: |
          ðŸš¨ *Release Alert for ${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}*

          ${{ steps.check-release.outputs.slack_message }}

          Repository: https://github.com/${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}
          Threshold: ${{ env.DAYS_THRESHOLD }} days with no release.

          Please check if a new release is needed.
        SLACK_TITLE: Release Alert
        SLACK_USERNAME: Release Bot

    - name: Summary
      run: |
        echo "## Release Check Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Repository:** ${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Threshold:** ${{ env.DAYS_THRESHOLD }} days" >> $GITHUB_STEP_SUMMARY
        echo "- **Status:** ${{ steps.check-release.outputs.status }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Alert:** ${{ steps.check-release.outputs.alert }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Details" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        echo "${{ steps.check-release.outputs.slack_message }}" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
